services:
  api_runner:
    container_name: "snippet_searcher_runner"
    image: ghcr.io/ingsis-group-12/snippet-searcher-runner:main
    restart: always
    ports:
      - "8080:8080"

  api_operations:
    container_name: "snippet_operations"
    image: ghcr.io/ingsis-group-12/snippet-operations:main
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - api_asset

  api_asset:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    restart: always
    ports:
      - "8082:8082"
    environment:
      AZURE_HOST: "http://azurite"

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

  api_permissions:
    container_name: "snippet_permissions"
    image: ghcr.io/ingsis-group-12/snippet-permissions:main
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  printscript-ui:
    container_name: "printscript_ui"
    image: ghcr.io/ingsis-group-12/printscript-ui:master
    restart: always
    ports:
      - "5173:5173"
    volumes:
      - dist-volume:/printscript-ui/dist

  reverse-proxy:
    container_name: "reverse-proxy"
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ./nginx/images/:/usr/share/nginx/images/:ro

      - dist-volume:/usr/share/nginx/html:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    restart: always

volumes:
  postgres-data:
  blob:
    external: false
  dist-volume:
